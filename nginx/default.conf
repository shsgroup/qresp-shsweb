# use password file for SSL certificate
ssl_password_file /etc/certs/ssl_passwords.txt;

limit_req_zone $binary_remote_addr zone=mylimit:10m rate=90r/m;
# proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream gui {
  server gui:3000;
}

upstream api {
  server backend:5000;
}

#server {
#  listen 80 default_server;
#  listen [::]:80 default_server;
#  server_name shspaperstack.chem.yale.edu;
#  return 301 https://$host$request_uri;
#}

server {
  listen 80 default_server;
  listen [::]:80 default_server;
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name shspaperstack.chem.yale.edu;
  server_tokens off;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  #proxy_set_header Host $http_host;
  #proxy_set_header X-Real-IP $remote_addr;
  #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  # Define the maximum file size on file uploads
  client_max_body_size 5M;
  client_body_buffer_size 5M;

  ssl_certificate "/etc/certs/nginx.crt";
  ssl_certificate_key "/etc/certs/nginx.key";

  limit_req zone=mylimit burst=60 nodelay;

  location /api {
    proxy_pass http://api;
  }

  location / {
    proxy_pass http://gui;
  }
}

